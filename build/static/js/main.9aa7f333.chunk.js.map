{"version":3,"sources":["app/components/App/AppBackground.js","app/components/Resume/Contact.js","app/components/Resume/Education.js","app/components/Resume/Experience.js","app/components/Resume/Name.js","app/components/Resume/ProgressRing.js","app/components/Resume/Headshot.js","app/components/Resume/Headline.js","app/components/Resume/Profile.js","app/components/Resume/Skill.js","app/components/Resume/Skillsets.js","app/components/Resume/Resume.js","app/components/Layout/MainScreen.js","app/components/App/AppLayout.js","app/components/App/App.js","serviceWorker.js","index.js"],"names":["AppBackground","className","src","alt","preload","autoPlay","loop","muted","type","Contact","Education","Experience","Name","ProgressRing","props","height","width","fill","stroke","strokeWidth","targetProgress","headshot","radius","circumference","Math","PI","cx","cy","setProgress","progress","strokeDashoffset","attributeName","attributeType","from","to","dur","repeatCount","strokeDasharray","style","r","Headshot","href","Headline","Profile","Skill","title","Skillsets","Resume","MainScreen","AppLayout","App","Boolean","window","location","hostname","match","store","createStore","Provider","propTypes","PropTypes","object","isRequired","subscribe","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9aa7f333.chunk.js","sourcesContent":["import React from 'react';\n// import Image from '../../../assets/media/images/white-triangles-background.png';\n// import Video from '../../../assets/media/videos/white-triangles-background.mp4';\n\nconst AppBackground = () => {  \n  return (\n    <div className=\"o-app-background\">\n      <div className=\"o-app-background__overlay\"></div>\n      {/* // NOTE: for 'master': 'https://jorgereyesjunior.github.io/src/assets/media/images/white-triangles-background.png' */}\n      {/* // NOTE: for 'development': <img className=\"o-app-background__image\" src={Image} alt=\"Full screen background image of abstract white triangles\"></img> */}\n      <img className=\"o-app-background__image\" src={'https://jorgereyesjunior.github.io/src/assets/media/images/white-triangles-background.png'} alt=\"Full screen abstract white triangles background\"></img>\n      <video className=\"o-app-background__video\" preload=\"preload\" autoPlay=\"autoplay\" loop=\"loop\" muted >\n        {/* // NOTE: for 'master': https://jorgereyesjunior.github.io/src/assets/media/videos/white-triangles-background.mp4 */}\n        {/* // NOTE: for 'development': <source src={Video} type=\"video/mp4\"></source> */}\n        <source src={'https://jorgereyesjunior.github.io/src/assets/media/videos/white-triangles-background.mp4'} type=\"video/mp4\"></source>\n      </video>\n    </div>\n  )\n};\n\nexport default AppBackground;","import React from 'react';\n\nconst Contact = () => {\n  return (\n    <section className=\"o-resume__contact\">\n      <div className=\"c-contact\">\n        <div className=\"c-data-panel\">\n          <h2 className=\"c-data-panel__title\">Contact</h2>\n          <div className=\"c-data-panel__content\">\n            <div className=\"c-snapshot-panel\">\n              <div className=\"c-snapshot-panel__content\">\n                <ul className=\"c-contact__list\">\n                  {/* open a new tab with google maps? */}\n                  <li className=\"c-contact__listing\">Area of Operations: <span className=\"c-contact__listing-anchor\">Austin, TX</span></li>\n                  <li className=\"c-contact__listing\">Github: <span className=\"c-contact__listing-anchor\">https://github.com/JorgeReyesJunior</span></li>\n                  <li className=\"c-contact__listing\">LinkedIn: <span className=\"c-contact__listing-anchor\">linkedin.com/in/jareyesjr</span></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n};\n\nexport default Contact;","import React from 'react';\n\nconst Education = () => {\n  return (\n    <section className=\"o-resume__education\">\n      <div className=\"c-data-panel\">\n        <h2 className=\"c-data-panel__title\">Education</h2>\n        <div className=\"c-data-panel__content\">\n          <div className=\"c-snapshot-panel\">\n            <div className=\"c-snapshot-panel__content\">Education</div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n};\n\nexport default Education;","import React from 'react';\n\nconst Experience = () => {\n  return (\n    <section className=\"o-resume__experience\">\n      <div className=\"c-experience\">\n        <div className=\"c-data-panel\">\n          <h2 className=\"c-data-panel__title\">Experience</h2>\n          <div className=\"c-data-panel__content\">\n            <div className=\"c-snapshot-panel c-snapshot-panel--primary\">\n              <div className=\"c-snapshot-panel__content\">Experience</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n};\n\nexport default Experience;","import React from 'react';\n\nconst Name = () => {\n  return (\n    <section className=\"o-resume__name\">\n      <div className=\"c-name\">\n        <h1 className=\"c-name__first\">Jorge</h1>\n        <h1 className=\"c-name__last\">Reyes</h1>\n        <h1 className=\"c-name__suffix\">Jr</h1>\n      </div>\n    </section>\n  )\n};\n\nexport default Name;","import React from 'react';\n\nconst ProgressRing = (props) => {\n  const { height, width, fill, stroke, strokeWidth, targetProgress , headshot } = props;\n  // const [ progressState, setProgressState ] = useState(0);\n  const radius = (width / 2 );\n  const circumference = (radius * 2 * Math.PI);\n  const cx = (width / 2 );\n  const cy = (height / 2 );\n\n  const setProgress = function (progress) {\n    const offset = circumference - (progress / 100 * circumference);\n    const style = { strokeDashoffset: `-${offset}` };\n    return style;\n  };\n  \n  if (headshot === true ) {\n    return (\n      <svg\n        className=\"progress-ring\"\n        height={`${height}`}\n        width={`${width}`}\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          attributeType=\"XML\"\n          type=\"rotate\"\n          from=\"0 0 \"\n          to=\"360 0 0\"\n          dur=\"50s\"\n          repeatCount=\"indefinite\" />\n        <circle\n          className=\"progress-ring__circle\"\n          stroke={`${stroke}`}\n          strokeWidth={`${strokeWidth}`}\n          strokeDasharray={`${circumference}` + ' ' + `${circumference}`}\n          style={setProgress(targetProgress)}\n          fill={`${fill}`}\n          r={`${radius}`}\n          cx={`${cx}`}\n          cy={`${cy}`}\n        />\n      </svg>\n    );\n  } else {\n    return (\n      <svg\n        className=\"progress-ring\"\n        height={`${height}`}\n        width={`${width}`}\n      >\n        <circle\n          className=\"progress-ring__circle\"\n          stroke={`${stroke}`}\n          strokeWidth={`${strokeWidth}`}\n          strokeDasharray={`${circumference}` + ' ' + `${circumference}`}\n          style={setProgress(targetProgress)}\n          fill={`${fill}`}\n          r={`${radius}`}\n          cx={`${cx}`}\n          cy={`${cy}`}\n        />\n      </svg>\n    );\n  }\n\n\n  \n};\n\nexport default ProgressRing;","import React from 'react';\nimport ProgressRing from './ProgressRing';\n\nconst Headshot = () => {\n  return (\n    <section className=\"o-resume__headshot\">\n      <div className=\"c-headshot\">\n        <figure className=\"c-headshot__figure\">\n          <ProgressRing height=\"200\" width=\"200\" stroke=\"white\" strokeWidth=\"2\" fill=\"transparent\" targetProgress=\"100\" headshot={true} />\n          <ProgressRing height=\"200\" width=\"200\" stroke=\"white\" strokeWidth=\"2\" fill=\"transparent\" targetProgress=\"75\" headshot={true} />\n          <ProgressRing height=\"200\" width=\"200\" stroke=\"#0af7f4\" strokeWidth=\"32\" fill=\"transparent\" targetProgress=\"50\" headshot={true} />\n          <ProgressRing height=\"200\" width=\"200\" stroke=\"#0ff7f4\" strokeWidth=\"2\" fill=\"transparent\" targetProgress=\"0\" headshot={true} />\n          <img className=\"c-headshot__image\" src=\"https://icon-library.net/images/headshot-icon/headshot-icon-26.jpg\"/>\n        </figure>\n        <a href=\"https://jorgereyesjunior.github.io/\">jorgereyesjunior.github.io</a>\n      </div>\n    </section>\n  )\n};\n\nexport default Headshot;","import React from 'react';\n\nconst Headline = () => {\n  return (\n    <section className=\"o-resume__headline\">\n      <div className=\"c-headline\">\n        <div className=\"c-data-panel\">\n          <div className=\"c-snapshot-panel c-snapshot-panel--primary\">\n            <div className=\"c-snapshot-panel__content\">\n              {/* idea: give the 'hightlight' an arrray of values to cycle and display */}\n              <p className=\"c-data-panel__title\">I'm a <span className=\"c-headline__highlight\">[</span><span className=\"c-headline__accent\"> Software Engineer </span><span className=\"c-headline__highlight\">]</span> with a passion for unraveling and understanding complex systems</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n};\n\nexport default Headline;","import React from 'react';\n\nconst Profile = () => {\n  {/* Engineer: Do what I want with what I have */}\n  return (\n    <section className=\"o-resume__profile\">\n      <div className=\"c-data-panel\">\n        <h2 className=\"c-data-panel__title\">Profile</h2>\n        <div className=\"c-data-panel__content\">\n          <div className=\"c-snapshot-panel\">\n            <div className=\"c-snapshot-panel__content\">Profile</div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n};\n\nexport default Profile;","import React, { Fragment } from 'react';\n// import jsSvg from '../assets/icons/javascript.svg';\n// import SVG from 'react-inlinesvg';\n\nconst Skill = (props) => {\n  const {title} = props;\n\n  return (\n    <Fragment>\n      <div className='c-skill--icon'>\n        <h3 className='c-skill--title'>{`${title}`}</h3>\n        {/* <SVG className=\"c-skillset__icon\" src={jsSvg} alt={`${title}`} /> */}\n      </div>\n      <ul className=\"c-skillset__list\">\n        <li className=\"c-skillset__listing\">\n          <div className=\"c-skillset__data\">skillset Data</div>\n        </li>\n        <li className=\"c-skillset__listing\">\n          <div className=\"c-skillset__data\">skillset Data</div>\n        </li>\n      </ul>\n    </Fragment>\n  )\n};\n\nexport default Skill;","import React from 'react';\nimport ProgressRing from './ProgressRing';\nimport Skill from './Skill';\n\nconst Skillsets = () => {\n  return (\n    <section className=\"o-resume__skillset\">\n      <div className=\"c-data-panel\">\n        <h2 className=\"c-data-panel__title\">Skillsets</h2>\n        <div className=\"c-data-panel__content\">\n          <div className=\"c-snapshot-panel\">\n            <div className=\"c-snapshot-panel__content\">\n              {/* SKILLSET CARDS */}\n              <div className=\"c-skillset__card\">\n                <h3 className=\"c-skillset__title\">c-skillset__card</h3>\n                <div className=\"c-skillset__content\">\n                  <ProgressRing\n                    height=\"200\"\n                    width=\"200\"\n                    stroke=\"white\"\n                    // 4\n                    strokeWidth=\"8\"\n                    fill=\"transparent\"\n                    targetProgress=\"75\" />\n                  <Skill title={`JS`}/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n};\n\nexport default Skillsets;","import React from 'react';\nimport Contact from './Contact';\nimport Education from './Education';\nimport Experience from './Experience';\nimport Name from './Name';\nimport Headshot from './Headshot';\nimport Headline from './Headline';\nimport Profile from './Profile';\nimport Skillsets from './Skillsets';\n\nconst Resume = () => {\n  return (\n    <div className=\"o-resume\">\n      <Headshot />\n      <Name />\n      <Headline />\n      <Contact />\n      <Profile />\n      <Education />\n      <Skillsets />\n      <Experience />\n    </div>\n  )\n};\n\nexport default Resume;","import React from 'react';\nimport Resume from '../Resume/Resume'\n\nconst MainScreen = () => {  \n  return (\n    <div className=\"o-main-screen\">\n        <Resume />\n    </div>\n  )\n};\n\nexport default MainScreen;","import React from 'react';\nimport MainScreen from '../Layout/MainScreen';\n\nconst AppLayout = () => {\n  return (\n    <div className=\"o-app-layout\">\n      <div className=\"o-app-layout__mainscreen\">\n        <MainScreen />\n      </div>\n    </div>\n  )\n};\n\nexport default AppLayout;","import React from 'react';\nimport AppBackground from './AppBackground';\nimport AppLayout from './AppLayout';\n\nconst App = () => {  \n  return (\n    <div className=\"o-app\">\n      <AppBackground />\n      <AppLayout />\n    </div>\n  )\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"regenerator-runtime/runtime\";\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n// import { createStore, applyMiddleware } from 'redux';\n// import createSagaMiddleware from 'redux-saga';\nimport PropTypes from 'prop-types';\n// import RootReducer from './app/reducers/all';\n// import RootSaga from './app/sagas';\nimport App from './app/components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport './app/styles/imports.css'\n\nconst store = createStore(() => {});\n\n// const sagaMiddleware = createSagaMiddleware();\n// const store = createStore(\n//   RootReducer,\n//   applyMiddleware(sagaMiddleware)\n// );\n\n// sagaMiddleware.run(RootSaga);\n\nProvider.propTypes = {\n  store: PropTypes.object.isRequired\n};\n\nstore.subscribe(() => {\n  // let newState = store.getState();\n  // console.log(\"New `store` state: \", newState);\n});\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('o-app-root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}